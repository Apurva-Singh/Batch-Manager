{"version":3,"sources":["components/AuthHero.tsx","ToggleSwicth.tsx","pages/Auth/Login.page.tsx","components/Avatars/AvatarContent.tsx","components/Avatars/AvatarStack.tsx","pages/Auth/Signup.page.tsx","pages/Auth/Auth.page.tsx"],"names":["AuthHero","props","useEffect","console","log","className","defaultProps","ToggleSwitch","useState","enabled","setEnabled","Group","Label","as","passive","checked","onChange","Login","useFormik","initialValues","email","password","validationSchema","yup","required","shape","min","onSubmit","data","login","then","u","authActions","history","push","handleSubmit","getFieldProps","touched","isSubmitting","isValid","errors","useHistory","to","htmlFor","type","id","autoComplete","placeholder","Button","theme","btnType","name","memo","AvatarContent","imgUrl","sizeClass","onlineStatus","src","alt","AvatarStack","children","avatarUrl","sizeToDisplay","toDisplay","length","slice","remaining","map","avatar","Signup","setTimeout","value","disabled","Auth","path"],"mappings":"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","file":"static/js/5.7e826885.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\ninterface Props{\r\n \r\n}\r\n\r\nconst AuthHero: React.FC<Props>=(props)=>{\r\n    useEffect(()=>{\r\n        console.log(\"auth rendering\");\r\n    }, []);\r\n    \r\n    return(\r\n        <div className=\"hidden sm:flex h-screen w-1/2 bg-black text-white bg-hero-auth bg-cover bg-center bg-75% bg-no-repeat\">\r\n        \r\n        </div>\r\n    );\r\n};\r\nAuthHero.defaultProps={\r\n}\r\n\r\nexport default AuthHero;","import React, { useState } from \"react\";\r\nimport {Switch} from \"@headlessui/react\";\r\n\r\ninterface Props{\r\n \r\n}\r\n\r\nconst ToggleSwitch: React.FC<Props>=(props)=>{\r\n    const [enabled, setEnabled] = useState(false)\r\n\r\n    return(\r\n        <Switch.Group>\r\n      <div className=\"flex items-center\">\r\n        <Switch.Label as=\"p\" passive className=\"mr-4\">Show Password</Switch.Label>\r\n        <Switch\r\n          checked={enabled}\r\n          onChange={setEnabled}\r\n          className={`${\r\n            enabled ? 'bg-primary' : 'bg-gray-200'\r\n          } focus:outline-none relative inline-flex items-center h-6 rounded-full w-11 transition-colors `}\r\n        >\r\n          <span\r\n          aria-hidden=\"true\"\r\n            className={`${\r\n              enabled ? 'translate-x-6' : 'translate-x-1'\r\n            } inline-block w-4 h-4 transform bg-white rounded-full transition-transform`}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </Switch.Group>\r\n    );\r\n};\r\nToggleSwitch.defaultProps={\r\n}\r\n\r\nexport default ToggleSwitch;","import { FC, memo } from \"react\";\r\nimport { Link , useHistory } from \"react-router-dom\";\r\nimport { HiLockClosed, HiUser } from \"react-icons/hi\";\r\nimport { FaSpinner } from \"react-icons/fa\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport ToggleSwitch from \"../../ToggleSwicth\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport { login } from '../../api/auth';\r\nimport { authActions } from \"../../actions/auth.actions\";\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst Login: FC<Props> = (props) => {\r\n\r\n\r\n// const { setUser } = useContext(AppContext);\r\n\r\n  const {\r\n    handleSubmit,\r\n    getFieldProps,\r\n    touched,\r\n    isSubmitting,\r\n    isValid,\r\n    errors,\r\n  } = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: yup\r\n    .object()\r\n    .required()\r\n    .shape({\r\n      email: yup.string().required().email(),\r\n      password: yup\r\n        .string()\r\n        .required()\r\n        .min(8, ({ min }) => `Atleast ${min} characters!`),\r\n    }),\r\n\r\n    onSubmit: (data) => {\r\n     login(data).then((u)=>{\r\n      authActions.login(u);\r\n       history.push('/dashboard');\r\n     });\r\n    },\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\" md:w-96 ml-auto mr-auto max-h-screen max-w-3/4\">\r\n      <div className=\" flex flex-col\">\r\n        <h1 className=\"text-40 leading-tight\">\r\n          Log In to <span className=\"text-primary\">CORK</span>\r\n        </h1>\r\n        <p className=\"text-14 mt-2\">\r\n          New Here?{\" \"}\r\n          <Link to=\"/signup\">\r\n            <span className=\" text-primary border-b font-semibold border-primary\">\r\n              Create an account\r\n            </span>\r\n          </Link>\r\n        </p>\r\n        <div className=\"mt-10 \">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"pb-25\">\r\n              <div className=\"flex flex-row items-baseline pb-10\">\r\n                <HiUser className=\"text-indigo-500 h-5 w-5\" />\r\n                <label htmlFor=\"email-address\" className=\"sr-only\">\r\n                  Email address\r\n                </label>\r\n                <input\r\n                  className=\"pl-8 focus:outline-none\"\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  autoComplete=\"email\"\r\n                  {...getFieldProps(\"email\")}\r\n                  placeholder=\"Username\"\r\n                />\r\n              </div>\r\n              <div className=\" h-px bg-gray-100 mt-2\"></div>\r\n\r\n              {touched.email && (\r\n                <div className=\"text-red-400 \">{errors.email}</div>\r\n              )}\r\n            </div>\r\n            <div className=\"pb-25 mb-2\">\r\n              <div className=\"flex flex-row items-baseline pb-10\">\r\n                <HiLockClosed className=\"text-indigo-500 h-5 w-5 \" />\r\n                <label htmlFor=\"password\" className=\"sr-only\">\r\n                  password{\" \"}\r\n                </label>\r\n                <input\r\n                  className=\" pl-8 focus:outline-none mt-4\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  {...getFieldProps(\"password\")}\r\n                  placeholder=\"Password\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\" h-px bg-gray-100 mt-2\"></div>\r\n\r\n              {touched.password && (\r\n                <div className=\"text-red-400\">{errors.password}</div>\r\n              )}\r\n            </div>\r\n            <div className=\"flex flex-col sm:flex-row justify-between\">\r\n              <ToggleSwitch />\r\n              <div>\r\n                  <Button theme=\"primary\" btnType=\"solid\" isValid={isValid} >Login</Button>\r\n              </div>\r\n            </div>\r\n            {isSubmitting && (\r\n              <FaSpinner className=\"mt-5 animate-spin \"></FaSpinner>\r\n            )}\r\n            <div className=\"flex flex-col mt-14 items-center\">\r\n              <div className=\"mb-2\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"loggedin\"\r\n                  className=\" bg-gray-300 outline-none\"\r\n                />\r\n                <label htmlFor=\"loggedin\" className=\"text-gray-400 pl-10\">\r\n                  Keep me logged in\r\n                </label>\r\n              </div>\r\n              <div className=\"mt-4\">\r\n                <Link to=\"/forgot-password\" className=\"text-primary\">\r\n                  Forgot Password?\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <p className=\"sm:absolute md:w-96 mt-10 sm:mt-0 bottom-0 \">\r\n            2020 All Rights Reserved.{\" \"}\r\n            <span className=\"text-primary\">\r\n              <Link to=\"/dashboard\">CORK</Link>\r\n            </span>{\" \"}\r\n            is a product of Designreset.{\" \"}\r\n            <span className=\"text-primary\">\r\n              <Link to=\"/dashboard\">\r\n                Cookie Preferences, Privacy, and Terms.\r\n              </Link>\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nLogin.defaultProps = {};\r\n\r\nexport default memo(Login);\r\n","import React from \"react\";\r\n\r\ninterface Props{\r\n sizeClass: string;\r\n imgUrl: string;\r\n onlineStatus?: 'online' | 'offline' | undefined;\r\n\r\n children?:React.ReactNode;\r\n}\r\n\r\nconst AvatarContent: React.FC<Props>=({imgUrl, onlineStatus, sizeClass})=>{\r\n \r\n\r\n    return(\r\n        <div>\r\n                      <div className=\" hover:translate-y-1 cursor-pointer transform  \">\r\n                     \r\n                          \r\n                     <img src={imgUrl} alt=\"avatar\" className={\" rounded-full  border-2 border-white\"+ sizeClass}/>\r\n                     \r\n \r\n                 </div>      \r\n\r\n      \r\n  \r\n      </div>\r\n    );\r\n};\r\nAvatarContent.defaultProps={\r\n\r\n}\r\n\r\nexport default AvatarContent;","import React from \"react\";\r\nimport AvatarContent from \"./AvatarContent\";\r\n\r\n\r\ninterface Props{\r\n    children?: React.ReactElement[];\r\n    avatarUrl:string[];\r\n    sizeToDisplay: string;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst DEFAULT_MAX_AVATARS = 4;\r\nconst AvatarStack: React.FC<Props>=({children, avatarUrl, sizeToDisplay})=>{\r\n\r\n    \r\n    const maxAvatar= DEFAULT_MAX_AVATARS; //4\r\n    let toDisplay:string[]=[];\r\n    const noOfAvatar= avatarUrl.length; // 5\r\n    if(noOfAvatar>= maxAvatar){     // 5>4\r\n\r\n            toDisplay=avatarUrl.slice(0,maxAvatar); //\r\n            console.log(toDisplay);\r\n    }\r\n    else{\r\n        toDisplay= avatarUrl;\r\n    }\r\n    let remaining= avatarUrl.length- maxAvatar;\r\n\r\n    let sizeClass=\"\";\r\n                return (\r\n                   \r\n                   <div className=\"flex flex-row -space-x-2 items-center \">\r\n                       \r\n                       {  console.log(\"Avatar stack here \" , sizeToDisplay , \" \", toDisplay)} \r\n                       \r\n                         {toDisplay.map((avatar, id) => {\r\n                             \r\n                              if(sizeToDisplay===\"sm\"){\r\n                                          sizeClass=\" h-8 w-8\"\r\n                                      }\r\n                                      else if(sizeToDisplay===\"md\"){\r\n                                          sizeClass=\" h-12 w-12\"\r\n                                      }\r\n                                      else if(sizeToDisplay===\"lg\"){\r\n                                          sizeClass=\" h-20 w-20\"\r\n                                      }\r\n                                      else if(sizeToDisplay===\"xl\"){\r\n                                          sizeClass=\" h-24 w-24\"\r\n                                      }\r\n\r\n                                      \r\n                      return(\r\n                          <div>\r\n                            <AvatarContent sizeClass={sizeClass} imgUrl={avatar} /> \r\n                            </div>\r\n                              \r\n                         )}\r\n\r\n                         )\r\n                      }\r\n                       {remaining>0 ? <div className=\" z-10 text-14 p-2 px-8 text-blue-400 bg-gray-200 rounded-lg h-6\">+{ remaining} more</div>: ''}\r\n\r\n\r\n           \r\n                </div>\r\n                );\r\n}\r\n\r\nexport default AvatarStack;","import { FC, memo } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { HiAtSymbol, HiLockClosed, HiUser } from \"react-icons/hi\";\r\nimport { FaSpinner } from \"react-icons/fa\";\r\n\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport ToggleSwitch from \"../../ToggleSwicth\";\r\nimport AvatarStack from \"../../components/Avatars/AvatarStack\";\r\n\r\ninterface Props {}\r\n\r\nconst Signup: FC<Props> = (props) => {\r\n  const history = useHistory();\r\n\r\n  const {\r\n    handleSubmit,\r\n    getFieldProps,\r\n    touched,\r\n    isSubmitting,\r\n    errors,\r\n    isValid,\r\n  } = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: yup.object().shape({\r\n      email: yup.string().required().email(),\r\n      password: yup\r\n        .string()\r\n        .required()\r\n        .min(8, ({ min }) => `Atleats ${min} characters required`),\r\n    }),\r\n\r\n    onSubmit: (data) => {\r\n      console.log(\"form submitting\", data);\r\n      setTimeout(() => {\r\n        console.log(\"submitted successfully\");\r\n        history.push(\"/dashboard\");\r\n      }, 5000);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\" md:w-96 ml-auto mr-auto max-h-screen max-w-3/4 \">\r\n      <div className=\" flex flex-col\">\r\n        <h1 className=\" text-40 leading-tight\">Get started with a free account</h1>\r\n        <p className=\"text-14 mt-2\">\r\n          Already have an account?{\" \"}\r\n          <Link to=\"/login\">\r\n            <span className=\" text-primary border-b font-semibold border-primary\">\r\n              Log in\r\n            </span>\r\n          </Link>\r\n        </p>\r\n        <div className=\"mt-10 \">\r\n          <form onSubmit={handleSubmit}>\r\n\r\n            <div className=\"pb-20\">\r\n              <div className=\"flex flex-row items-baseline pb-10\">\r\n                <HiUser className=\"text-indigo-500 h-5 w-5\" />\r\n                <label htmlFor=\"username\" className=\"sr-only\">\r\n                 USERNAME\r\n                </label>\r\n                <input\r\n                  className=\"pl-8 focus:outline-none\"\r\n                  type=\"username\"\r\n                  id=\"username\"\r\n                  placeholder=\"Username\"\r\n                />\r\n              </div>\r\n              <div className=\" h-px bg-gray-100 mt-1\"></div>\r\n\r\n             \r\n            </div>\r\n\r\n\r\n            <div className=\"pb-20\">\r\n              <div className=\"flex flex-row items-baseline pb-10\">\r\n                <HiAtSymbol className=\"text-indigo-500 h-6 w-6\" />\r\n                <label htmlFor=\"email-address\" className=\"sr-only\">\r\n                  Email address\r\n                </label>\r\n                <input\r\n                  className=\"pl-8 focus:outline-none\"\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  autoComplete=\"email\"\r\n                  {...getFieldProps(\"email\")}\r\n                  placeholder=\"Email\"\r\n                />\r\n              </div>\r\n              <div className=\" h-px bg-gray-100 mt-1\"></div>\r\n\r\n              {touched.email && (\r\n                <div className=\"text-red-400 \">{errors.email}</div>\r\n              )}\r\n            </div>\r\n            <div className=\"pb-20 mb-2\">\r\n              <div className=\"flex flex-row items-baseline pb-10\">\r\n                <HiLockClosed className=\"text-indigo-500 h-5 w-5 \" />\r\n                <label htmlFor=\"password\" className=\"sr-only\">\r\n                  password{\" \"}\r\n                </label>\r\n                <input\r\n                  className=\" pl-8 focus:outline-none mt-4\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  {...getFieldProps(\"password\")}\r\n                  placeholder=\"Password\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\" h-px bg-gray-100 mt-1\"></div>\r\n                \r\n              {touched.password && (\r\n                <div className=\"text-red-400\">{errors.password}</div>\r\n              )}\r\n            </div>\r\n            <div className=\"mb-6\">\r\n              <input\r\n                type=\"checkbox\"\r\n                required \r\n                name=\"terms\"\r\n                value=\"terms\"\r\n                className=\" bg-gray-300 outline-none\"\r\n              />\r\n              <label htmlFor=\"loggedin\" className=\"text-gray-400 pl-10\">\r\n                I agree to the{\" \"}\r\n                <span className=\"text-primary\">Terms and Conditions</span>\r\n              </label>\r\n            </div>\r\n            <div className=\"flex flex-col sm:flex-row justify-between\">\r\n               <ToggleSwitch />\r\n              <div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"disabled:opacity-50\r\n                  mt-4\r\n                  sm:mt-0\r\n            shadow-xl rounded-md\r\n            text-14\r\n            text-white px-20 py-8 cursor-pointer hover:shadow-none bg-primary inline-block text-center  \"\r\n                  disabled={!isValid}\r\n                  \r\n                >\r\n                  Get Started!\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {isSubmitting && (\r\n              <FaSpinner className=\"mt-5 animate-spin \"></FaSpinner>\r\n            )}\r\n          </form>\r\n          <AvatarStack avatarUrl={\r\n            [\r\n        \"https://i.natgeofe.com/n/f0dccaca-174b-48a5-b944-9bcddf913645/01-cat-questions-nationalgeographic_1228126.jpg\",\r\n        \"https://static.scientificamerican.com/sciam/cache/file/92E141F8-36E4-4331-BB2EE42AC8674DD3_source.jpg\",\r\n        \"https://i.natgeofe.com/n/f0dccaca-174b-48a5-b944-9bcddf913645/01-cat-questions-nationalgeographic_1228126.jpg\",\r\n        \"https://static.scientificamerican.com/sciam/cache/file/92E141F8-36E4-4331-BB2EE42AC8674DD3_source.jpg\",\r\n        \"https://static.scientificamerican.com/sciam/cache/file/92E141F8-36E4-4331-BB2EE42AC8674DD3_source.jpg\"\r\n    ]} sizeToDisplay=\"lg\" ></AvatarStack>\r\n          <div className=\"\">\r\n          <p className=\"sm:absolute md:w-96 mt-8 sm:mt-0 bottom-0 \">\r\n            2020 All Rights Reserved.{\" \"}\r\n            <span className=\"text-primary\">\r\n              <Link to=\"/dashboard\">CORK</Link>\r\n            </span>{\" \"}\r\n            is a product of Designreset.{\" \"}\r\n            <span className=\"text-primary\">\r\n              <Link to=\"/dashboard\">\r\n                Cookie Preferences, Privacy, and Terms.\r\n              </Link>\r\n            </span>\r\n          </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nSignup.defaultProps = {};\r\n\r\nexport default memo(Signup);\r\n","import React, { memo } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport AuthHero from \"../../components/AuthHero\";\r\nimport Login from \"./Login.page\";\r\nimport Signup from \"./Signup.page\";\r\n\r\ninterface Props {\r\n}\r\n\r\nconst Auth: React.FC<Props> = (props) => {\r\n  return (\r\n    <div className=\"flex flex-row justify-between\">\r\n      <Switch>\r\n        <Route path=\"/login\">\r\n          <Login></Login>\r\n        </Route>\r\n        <Route path=\"/signup\">\r\n          <Signup></Signup>\r\n        </Route>\r\n      </Switch>\r\n      <AuthHero></AuthHero>\r\n    </div>\r\n  );\r\n};\r\nAuth.defaultProps = {};\r\n\r\nexport default memo(Auth);\r\n"],"sourceRoot":""}